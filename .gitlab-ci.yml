image: maven:latest

before_script:
 # Install JFrog CLI
  -  curl -fL https://getcli.jfrog.io | sh
  # Configure Artifactory instance with JFrog CLI
  - ./jfrog rt config --url=$ARTIFACTORY_URL --user=$ARTIFACTORY_USER --password=$ARTIFACTORY_PASS
  - ./jfrog rt c show
  # Set the M2_HOME environment variable
  - export M2_HOME=/usr/share/maven
  # Replace the target SNAPSHOT repository name in the configuration.yml to the correct one.
  - sed -i 's,SNAPSHOT_REPO_KEY,'"$SNAPSHOT_REPO_KEY"',g' configuration.yml
  # Replace the target RELEASE repository name in the configuration.yml to the correct one.
  - sed -i 's,RELEASE_REPO_KEY,'"$RELEASE_REPO_KEY"',g' configuration.yml
  # Replace the JCENTER name in the configuration.yml to the correct one.
  - sed -i 's,ARTIFACTORY_JCENTER_REPO_KEY,'"$ARTIFACTORY_JCENTER_REPO_KEY"',g' configuration.yml
  
build:
  tags:
    - maven
    - ssh
  script:
    - eval $(ssh-agent -s)    
    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")    
    # For Docker builds disable host key checking. Be aware that by adding that
    # you are susceptible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # Run the MVN command
    - ./jfrog rt mvn "clean verify gpg:sign install" configuration.yml --build-name=mew-utilities_gitlabci-maven-artifactory --build-number=$CI_JOB_ID
    # Collect the environment variables
    - ./jfrog rt bce gitlabci-maven-artifactory $CI_JOB_ID
    # Pass the build information to Artifactory
    - ./jfrog rt bp gitlabci-maven-artifactory $CI_JOB_ID